"""
문제 설명
 - 탐욕법 (Greedy)

어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다.

예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19, 12, 14, 92, 94, 24] 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다.

문자열 형식으로 숫자 number와 제거할 수의 개수 k가 solution 함수의 매개변수로 주어집니다.
number에서 k 개의 수를 제거했을 때 만들 수 있는 수 중 가장 큰 숫자를 문자열 형태로 return 하도록 solution 함수를 완성하세요.



제한 조건
number는 1자리 이상, 1,000,000자리 이하인 숫자입니다.
k는 1 이상 number의 자릿수 미만인 자연수입니다.

입출력

예
number	    k	return
1924	    2	94
1231234	    3	3234
4177252841	4	775841

풀이

앞에 작은 것들이 나오면 빼는데, 맨 뒤의 1은 빼지 않는다. 작은 것을 빼되, 앞에서 빼는게 이득이 된다.
뺄 수 있는 수의 개수가 네개 밖에 안되기 때문에, 앞자리에 큰 걸 두기 위해서, 앞 쪽의 작은 수를 빼내고, 775841을 남기는게 답이다.

큰 수 만들기 - 방법
앞 자리에서부터 하나씩 골라서 담되, 지금 담으려는 것보다 작은 것들은 도로 뺀다.
단, 뺄 수있는 수효에 도달할 때까지만

큰 수가 앞 자리에, 작은 수가 뒷 자리에 놓이도록
(제약조건) 뺄 수 있는 수의 개수

예제 다시 살펴보기

number = “4177252841”, k = 4
4 1 을 담는다. 다음 7이 나왔는데, 우선 1을 빼고, 하나뺐다는 기록을 한다.
4도 빼고, 7이 4봐 크니까 4도 빼고, 하나 뺐다는 기록을 한다.
7 이 들어와있고, 다음 7을 이어 붙인 뒤,2를 붙인다.
5가 나왔는데, 이 때는 5가 그 앞 자리에 들어갔던 2보다 크고, 아직 뺄 수 있는 갯수가 남아 있으므로 2를 빼고 5를 당겨 붙인다.
5는 7보다 작으므로, 더이상 볼 필요가 없다.
2를 붙인다.
그 다음 8이 등장한다. 8이 2를 쓰는 것보다 앞 쪽에 쓰기 유리하기에,7758이 된다.
여기서 5도 빼고 싶지만, 뺄 수 있는 개수를 다 소모하였기 때문에 더 뺄 수 없고, 나머지 4, 1을 갖다 붙이면 답이 된다.

주의할 점
98765의 경우, k는 2로 주어져 있어서 2개를 뺄 수 있지만,
98765가 이미 큰거대로 모아져있기 때문에, 다 모아놓고 보면 ,98765가 된다.
이 경우는 뒤에꺼 2개를 빼고 987을 출력해야 한다.
"""


def solution(number, k):
    #number = 1924
    #k = 2
    for i , num in enumerate(number):
        # while len()

    answer = ''
    return answer


if __name__ == "__main__":

    number = 1924
    k = 2
    print(solution(number, k))
